{"version":3,"file":"static/js/397.9f2c54df.chunk.js","mappings":"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","sources":["Components/Results.js","Components/Battle.js","Components/Card.js","Components/Hover.js","Components/Tooltip.js","utils/api.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  FaCompass,\n  FaBriefcase,\n  FaUsers,\n  FaUserFriends,\n  FaUser,\n} from \"react-icons/fa\";\nimport propTypes from \"prop-types\";\nimport react from \"react\";\n\nimport Tooltip from \"./Tooltip\";\nimport { battle } from \"../utils/api\";\nimport Card from \"./Card\";\nimport Loading from \"./Loading\";\n\nconst ProfileList = ({ profile }) => {\n  return (\n    <ul className=\"card-list\">\n      <li>\n        <FaUser color=\"rgb(239, 115, 115)\" size={22} />\n        {profile.name}\n      </li>\n      {profile.location && (\n        <li>\n          <Tooltip text={\"User's Location\"}>\n            <FaCompass color=\"rgb(144, 115, 255)\" size={22} />\n            {profile.location}\n          </Tooltip>\n        </li>\n      )}\n      {profile.company && (\n        <li>\n          <Tooltip text={\"User's Company\"}>\n            <FaBriefcase color=\"#795548\" size={22} />\n            {profile.company}\n          </Tooltip>\n        </li>\n      )}\n      <li>\n        <FaUsers color=\"rgb(129, 195, 245)\" size={22} />\n        {profile.followers.toLocaleString()} followers\n      </li>\n      <li>\n        <FaUserFriends color=\"rgb(64, 183, 95)\" size={22} />\n        {profile.following.toLocaleString()} following\n      </li>\n    </ul>\n  );\n};\n\nProfileList.propTypes = {\n  profile: propTypes.object.isRequired,\n};\n\nconst Results = ({ playerOne, playerTwo, onReset }) => {\n  const [winner, setWinner] = useState(null);\n  const [loser, setLoser] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    battle([playerOne, playerTwo])\n      .then((players) => {\n        setWinner(players[0]);\n        setLoser(players[1]);\n        setError(null);\n        setLoading(false);\n      })\n      .catch(({ message }) => {\n        setError(message);\n        setLoading(false);\n      });\n  });\n\n  if (loading === true) {\n    return <Loading text=\"Battling\" />;\n  }\n\n  if (error) {\n    return <p className=\"center-text error\">{error}</p>;\n  }\n\n  return (\n    <react.Fragment>\n      <div className=\"grid space-around container-sm\">\n        <Card\n          header={winner.score === loser.score ? \"Tie\" : \"Winner\"}\n          subheader={`Score: ${winner.score.toLocaleString()}`}\n          avatar={winner.profile.avatar_url}\n          href={winner.profile.html_url}\n          name={winner.profile.login}\n        >\n          <ProfileList profile={winner.profile} />\n        </Card>\n\n        <Card\n          header={winner.score === loser.score ? \"Tie\" : \"Winner\"}\n          subheader={`Score: ${loser.score.toLocaleString()}`}\n          avatar={loser.profile.avatar_url}\n          href={loser.profile.html_url}\n          name={loser.profile.login}\n        >\n          <ProfileList profile={loser.profile} />\n        </Card>\n      </div>\n      <button className=\"btn dark-btn btn-space\" onClick={onReset}>\n        Reset\n      </button>\n    </react.Fragment>\n  );\n};\n\nResults.prototype = {\n  playerOne: propTypes.string.isRequired,\n  playerTwo: propTypes.string.isRequired,\n  onReset: propTypes.func.isRequired,\n};\n\nexport default Results;\n","import React, { useState } from \"react\";\nimport {\n  FaUserFriends,\n  FaFighterJet,\n  FaTrophy,\n  FaTimesCircle,\n} from \"react-icons/fa\";\nimport propTypes from \"prop-types\";\n\nimport Results from \"./Results\";\nimport ThemeContext from \"../Contexts/theme\";\n\nconst Instructions = () => {\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <div className=\"instructions-container\">\n          <h1 className=\"center-text header-lg\">INSTRUCTIONS</h1>\n          <ol className=\"container-small grid center-text battle-instructions\">\n            <li>\n              <h3 className=\"header-sm\">Enter two Github users</h3>\n              <FaUserFriends\n                className={`bg-${theme}`}\n                color=\"rgb(255,191,166)\"\n                size={140}\n              />\n            </li>\n            <li>\n              <h3 className=\"header-sm\">Battle</h3>\n              <FaFighterJet\n                className={`bg-${theme}`}\n                color=\"#727272\"\n                size={140}\n              />\n            </li>\n            <li>\n              <h3 className=\"header-sm\">See the winners</h3>\n              <FaTrophy\n                className={`bg-${theme}`}\n                color=\"rgb(255, 215, 0)\"\n                size={140}\n              />\n            </li>\n          </ol>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nconst PlayerInput = ({ onSubmit, label }) => {\n  const [username, setUsername] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //onSubmit(username);//i think this is going to need to be changed\n    onSubmit(username);\n  };\n\n  const handleChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <form onSubmit={handleSubmit} action=\"\">\n          <label htmlFor=\"username\" className=\"player-label\">\n            {label}\n          </label>\n          <div className=\"row player-inputs\">\n            <input\n              type=\"text\"\n              id=\"username\"\n              className={`input-${theme}`}\n              placeholder=\"github-username\"\n              autoComplete=\"off\"\n              value={username}\n              onChange={handleChange}\n            />\n            <button\n              className={`btn ${theme === \"dark\" ? \"light-btn\" : \"dark-btn\"}`}\n              type=\"submit\"\n              disabled={!username}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nPlayerInput.prototypes = {\n  onSubmit: propTypes.func.isRequired,\n  label: propTypes.string.isRequired,\n};\n\nconst PlayerPreview = ({ username, onReset, label }) => {\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <div className=\"column player\">\n          <h3 className=\"player-label\">{label}</h3>\n          <div className={`row  bg-${theme}`}>\n            <div className=\"player-info\">\n              <img\n                className=\"avatar-small\"\n                src={`https://github.com/${username}.png?size=200`}\n                alt={`Avatar for ${username}`}\n              />\n              <a href={`https://github.com/${username}`} className=\"link\">\n                {username}\n              </a>\n            </div>\n            <button className=\"btn-clear flex-center\" onClick={onReset}>\n              <FaTimesCircle color=\"rgb(194, 57, 42)\" size={26} />\n            </button>\n          </div>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\nPlayerPreview.propTypes = {\n  username: propTypes.string.isRequired,\n  onReset: propTypes.func.isRequired,\n  label: propTypes.string.isRequired,\n};\n\nconst Battle = () => {\n  const [playerOne, setPlayerOne] = useState(null);\n  const [playerTwo, setPlayerTwo] = useState(null);\n  const [battle, setBattle] = useState(false);\n\n  if (battle === true) {\n    return (\n      <Results\n        playerOne={playerOne}\n        playerTwo={playerTwo}\n        onReset={() => {\n          setBattle(false);\n          setPlayerOne(null);\n          setPlayerTwo(null);\n        }}\n      />\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Instructions />\n\n      <div className=\"players-container\">\n        <h1 className=\"center-text header-lg\">Players</h1>\n        <div className=\"row space-around\">\n          {playerOne === null ? (\n            <PlayerInput\n              label={\"Player One\"}\n              onSubmit={(player) => setPlayerOne(player)}\n            />\n          ) : (\n            <PlayerPreview\n              username={playerOne}\n              label={\"Player One\"}\n              onReset={() => setPlayerOne(null)}\n            />\n          )}\n\n          {playerTwo === null ? (\n            <PlayerInput\n              label={\"Player Two\"}\n              onSubmit={(player) => setPlayerTwo(player)}\n            />\n          ) : (\n            <PlayerPreview\n              username={playerTwo}\n              label={\"Player Two\"}\n              onReset={() => setPlayerTwo(null)}\n            />\n          )}\n        </div>\n        {playerOne && playerTwo && (\n          <button\n            className=\" btn dark-btn btn-space\"\n            onClick={(e) => {\n              e.preventDefault();\n              setBattle(true);\n            }}\n          >\n            Battle\n          </button>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Battle;\n","import propTypes from \"prop-types\";\nimport ThemeContext from \"../Contexts/theme\";\n\nconst Card = ({ header, subheader, avatar, href, name, children }) => {\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <div className={`card bg-${theme}`}>\n          <h4 className=\"header-lg center-text\">{header}</h4>\n          <img className=\"avatar\" src={avatar} alt={`Avatar for ${name}`} />\n          {subheader && <h4 className=\"center-text\">{subheader}</h4>}\n          <h2 className=\"center-text\">\n            <a className=\"link\" href={href}>\n              {name}\n            </a>\n          </h2>\n          {children}\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nCard.propTypes = {\n  header: propTypes.string.isRequired,\n  subheader: propTypes.string,\n  avatar: propTypes.string.isRequired,\n  href: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n};\n\nexport default Card;\n","import { useState } from \"react\";\n\nconst Hover = ({ children }) => {\n  const [hovering, setHovering] = useState(false);\n\n  return (\n    <div\n      onMouseOver={() => {\n        setHovering(true);\n      }}\n      onMouseOut={() => {\n        setHovering(false);\n      }}\n    >\n      {children(hovering)}\n    </div>\n  );\n};\n\nexport default Hover;\n","import propTypes from \"prop-types\";\n\nimport Hover from \"./Hover\";\n\nconst styles = {\n  container: {\n    position: \"relative\",\n    display: \"flex\",\n  },\n  tooltip: {\n    boxSizing: \"border-box\",\n    position: \"absolute\",\n    width: \"160px\",\n    bottom: \"100%\",\n    left: \"50%\",\n    marginLeft: \"-80px\",\n    borderRadius: \"3px\",\n    backgroundColor: \"hsla(0, 0%, 20%, 0.9)\",\n    padding: \"7px\",\n    marginBottom: \"5px\",\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontSize: \"14px\",\n  },\n};\n\nconst Tooltip = ({ text, children }) => {\n  return (\n    <Hover>\n      {(hovering) => (\n        <div style={styles.container}>\n          {hovering === true && <div style={styles.tooltip}>{text}</div>}\n          {children}\n        </div>\n      )}\n    </Hover>\n  );\n};\n\nTooltip.propTypes = {\n  text: propTypes.string.isRequired,\n};\n\nexport default Tooltip;\n","// const id = \"\";\n// const secretKey = \"\";\n// const params = `client_id=${id}&client_secret=${secretKey}`;\n\nconst getErrorMsg = (message, username) => {\n  if (message === \"Not Found\") {\n    return `${username} doesn't exist`;\n  }\n\n  return message;\n};\n\nconst getProfile = (username) => {\n  return fetch(`https://api.github.com/users/${username}`)\n    .then((res) => res.json())\n    .then((profile) => {\n      if (profile.message) {\n        throw new Error(getErrorMsg(profile.message, username));\n      }\n\n      return profile;\n    });\n};\n\nconst getRepos = (username) => {\n  return fetch(`https://api.github.com/users/${username}/repos`)\n    .then((res) => res.json())\n    .then((repos) => {\n      if (repos.message) {\n        throw new Error(getErrorMsg(repos.message, username));\n      }\n\n      return repos;\n    });\n};\n\nconst getStarCount = (repos) => {\n  return repos.reduce(\n    (count, { stargazers_count }) => count + stargazers_count,\n    0\n  );\n};\n\nconst calculateScore = (followers, repos) => {\n  return followers * 3 + getStarCount(repos);\n};\n\nconst getUserData = (player) => {\n  return Promise.all([getProfile(player), getRepos(player)]).then(\n    ([profile, repos]) => ({\n      profile,\n      score: calculateScore(profile.followers, repos),\n    })\n  );\n};\n\nconst sortPlayers = (players) => {\n  return players.sort((a, b) => b.score - a.score);\n};\n\nconst battle = (players) => {\n  return Promise.all([getUserData(players[0]), getUserData(players[1])]).then(\n    (results) => sortPlayers(results)\n  );\n};\n\nconst fetchPopularRepos = (language) => {\n  const endpoint = window.encodeURI(\n    `https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`\n  );\n\n  return fetch(endpoint)\n    .then((res) => res.json())\n    .then((data) => {\n      if (!data.items) {\n        throw new Error(data.message);\n      }\n\n      return data.items;\n    });\n  //. catch is not in here because this function is not in the up layer so in an error does occurs it will not be easily managed\n  //handle this in the ui layer\n};\n\nexport { fetchPopularRepos, battle };\n"],"names":["ProfileList","profile","className","color","size","name","location","Tooltip","text","company","followers","toLocaleString","following","Results","playerOne","playerTwo","onReset","useState","winner","setWinner","loser","setLoser","error","setError","loading","setLoading","useEffect","battle","then","players","catch","message","Loading","react","Fragment","Card","header","score","subheader","avatar","avatar_url","href","html_url","login","onClick","prototype","propTypes","Instructions","theme","PlayerInput","onSubmit","label","username","setUsername","handleSubmit","e","preventDefault","handleChange","target","value","action","htmlFor","type","id","placeholder","autoComplete","onChange","disabled","prototypes","PlayerPreview","src","alt","setPlayerOne","setPlayerTwo","setBattle","player","children","hovering","setHovering","onMouseOver","onMouseOut","styles","container","position","display","tooltip","boxSizing","width","bottom","left","marginLeft","borderRadius","backgroundColor","padding","marginBottom","textAlign","fontSize","style","getErrorMsg","getRepos","fetch","res","json","repos","Error","calculateScore","reduce","count","stargazers_count","getStarCount","getUserData","Promise","all","results","sort","a","b","sortPlayers","fetchPopularRepos","language","endpoint","window","encodeURI","data","items"],"sourceRoot":""}